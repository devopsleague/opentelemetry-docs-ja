groups:
  - id: faas_span
    prefix: faas
    brief: >
        このセマンティクス規約は、サーバーのプロビジョニングや管理を行わずに実行される関数(サーバーレス関数やFunction as a Service(FaaS)とも呼ばれる)のインスタンスをSpanで記述します。
    attributes:
      - id: trigger
        required:
          conditional: >
            FaaSインスタンスでは、着信時にfaas.trigger属性を設定しなければなりません(MUST)。FaaSインスタンスを起動しているクライアントは、クライアントに知られている場合、発信される起動に`faas.trigger`を設定しなければなりません(MUST)。例えば、トランスポートレイヤーがFaaSクライアントフレームワークで抽象化されていて、その設定にアクセスできない場合は、この限りではありません。
        brief: '関数が実行されるトリガーのタイプ。'
        type:
          allow_custom_values: false
          members:
            - id: datasource
              value: 'datasource'
              brief: 'データベースやファイルシステムの読み取り/書き込みなど、データソースの操作に対する応答の関数。'
            - id: http
              value: 'http'
              brief: '受信したHTTPリクエストへの応答の関数。'
            - id: pubsub
              value: 'pubsub'
              brief: 'メッセージングシステムにメッセージが送信されたときに実行される設定の関数。'
            - id: timer
              value: 'timer'
              brief: '定期的に実行されるように予定されている関数。'
            - id: other
              value: 'other'
              brief: '他に該当するものがない関数'
      - id: execution
        type: string
        brief: '現在実行されている関数の実行ID。'
        examples: 'af9d5aa4-a685-4c5f-a22b-444f80b3cc28'

  - id: faas_span.datasource
    prefix: faas.document
    extends: faas_span
    brief: >
      データベースやファイルシステムの読み書きなど、データソースの操作に反応して起動するFaaSのセマンティック規約。
    attributes:
      - id: collection
        type: string
        required: always
        brief: >
          トリガー操作が行われたソースの名前。例えば、Cloud StorageやS3であればバケット名、Cosmos DBであればデータベース名に対応します。
        examples: ['myBucketName', 'myDbName']
      - id: operation
        required: always
        type:
          allow_custom_values: true
          members:
            - id: insert
              value: 'insert'
              brief: '新しいオブジェクトが作成されたとき'
            - id: edit
              value: 'edit'
              brief: 'オブジェクトが変更されたとき'
            - id: delete
              value: 'delete'
              brief: 'オブジェクトが削除されたとき'
        brief: 'データに対して行われた操作の種類を記述します。'
      - id: time
        type: string
        required: always
        brief: >
          データにアクセスした時刻を[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)形式で、[UTC](https://www.w3.org/TR/NOTE-datetime)で表した文字列。
        examples: "2020-01-23T13:47:06Z"
      - id: name
        type: string
        brief: >
          操作の対象となるドキュメント名/テーブル名。例えば、クラウドストレージやS3ではファイル名、Cosmos DBではテーブル名となります。
        examples: ["myFile.txt", "myTableName"]

  - id: faas_span.http
    extends: faas_span
    brief: >
      TODO: databaseの話になってるのはtypo?
      Semantic Convention for FaaS triggered as a response to some data
      source operation such as a database or filesystem read/write.
    constraints:
      - include: http.server

  - id: faas_span.pubsub
    extends: faas_span
    brief: >
      メッセージングシステムにメッセージが送信されたときに実行されるFaaSセットのセマンティック規約。
    constraints:
      - include: messaging

  - id: faas_span.timer
    extends: faas_span
    prefix: faas
    brief: >
      定期的に実行されることが予定されているFaaSのセマンティック規約。
    attributes:
      - id: time
        type: string
        required: always
        brief: >
          [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)形式で、[UTC](https://www.w3.org/TR/NOTE-datetime)で表現された関数の起動時間を含む文字列です
        examples: "2020-01-23T13:47:06Z"
      - id: cron
        type: string
        brief: >
          スケジュール期間を[Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm)として含む文字列。
        examples: "0/5 * * * ? *"

  - id: faas_span.in
    extends: faas_span
    span_kind: server
    prefix: faas
    brief: >
      受信するFaaS Spanの追加属性
    attributes:
      - id: coldstart
        type: boolean
        brief: >
          サーバーレス機能が初めて実行された場合(コールドスタート)に真となる真偽値。

  - id: faas_span.out
    extends: faas_span
    span_kind: client
    prefix: faas
    brief: >
      発信するFaaS Spanの追加属性
    attributes:
      - id: invoked_name
        type: string
        required: always
        brief: >
          呼び出された関数の名前です。
        note: >
          呼び出された関数のリソース属性 `faas.name` と同じ値にすべきです(SHOULD)。
        examples: 'my-function'
      - id: invoked_provider
        type:
          allow_custom_values: true
          members:
            - id: AWS
              value: 'aws'
              brief: 'Amazon Web Services'
            - id: Azure
              value: 'azure'
              brief: 'Microsoft Azure'
            - id: GCP
              value: 'gcp'
              brief: 'Google Cloud Platform'
        required: always
        brief: >
          呼び出された関数のクラウドプロバイダー。
        note: >
          呼び出された関数のリソース属性である `cloud.provider` と同じ値にすべきです(SHOULD)。
        examples: 'aws'
      - id: invoked_region
        type: string
        required:
          conditional: >
            AWSやGCPなどの一部のクラウドプロバイダーでは、関数を一意に識別するためにその関数がホストされているリージョンが不可欠な情報であり、またエンドポイントの一部でもあります。リージョンは呼び出されるエンドポイントの一部であるため、クライアントは常にリージョンを知っています。このような場合には、`faas.invoked_region` を適宜設定しなければなりません(MUST)。リージョンがクライアントに知られていない場合や、呼び出された関数を識別するのに必要ない場合は、`faas.invoked_region`の設定は任意です。
        brief: >
          呼び出された関数が動いているリージョン
        note: >
          呼び出された関数のリソース属性である `cloud.region` と同じ値にすべきです(SHOULD)。
        examples: 'eu-central-1'
